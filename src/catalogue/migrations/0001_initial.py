# Generated by Django 3.2.13 on 2022-05-30 20:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('text', 'Text'), ('integer', 'Integer'), ('boolean', 'True / False'), ('float', 'Float'), ('richtext', 'Rich Text'), ('date', 'Date'), ('datetime', 'Datetime'), ('option', 'Option'), ('multi_option', 'Multi Option'), ('entity', 'Entity'), ('file', 'File'), ('image', 'Image')], default='text', max_length=20, verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('structure', models.CharField(choices=[('standalone', 'Самостоятельная категория'), ('parent', 'Родительская категория'), ('child', 'Дочерняя категория')], default='standalone', max_length=10, verbose_name='category structure')),
                ('meta_descriptions', models.CharField(blank=True, max_length=255, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogue.category')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_end', models.DateTimeField()),
                ('percent', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-date_created', 'date_end'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5000)),
                ('slug', models.SlugField(blank=True)),
                ('structure', models.CharField(choices=[('standalone', 'Stand-alone product'), ('parent', 'Parent product'), ('child', 'Child product')], default='standalone', max_length=10, verbose_name='Product structure')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_public', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('meta_title', models.TextField(blank=True, null=True)),
                ('_price', models.IntegerField(blank=True, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('rating', models.FloatField(editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5000)),
                ('required_shipping', models.BooleanField(default=True)),
                ('track_stock', models.BooleanField(default=True)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='кол-во запасов')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='catalogue.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original', models.ImageField(upload_to='images')),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('data_created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalogue.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='catalogue.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_text', models.TextField(blank=True, db_index=True, null=True)),
                ('value_bool', models.BooleanField(blank=True, db_index=True, null=True)),
                ('value_integer', models.IntegerField(blank=True, db_index=True, null=True)),
                ('value_float', models.FloatField(blank=True, db_index=True, null=True)),
                ('value_date', models.DateField(blank=True, db_index=True, null=True)),
                ('value_datatime', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_values', to='catalogue.product')),
            ],
            options={
                'unique_together': {('attribute', 'product')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='attributes',
            field=models.ManyToManyField(help_text='Атрибут продукта — это то, что этот продукт может иметь, например, размер, указанный его классом', through='catalogue.ProductAttributeValue', to='catalogue.Attribute', verbose_name='Характеристики'),
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogue.brand'),
        ),
        migrations.AddField(
            model_name='product',
            name='categories',
            field=models.ManyToManyField(through='catalogue.ProductCategory', to='catalogue.Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='parent',
            field=models.ForeignKey(blank=True, help_text='Выбирайте родительский продукт, только если вы создаете дочерний товар. Например, если это размер 4 определенного типа футболки. Оставьте пустым,если это автономный продукт (т.е. существует только одна версия этого продукта)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='catalogue.product', verbose_name='Parent product'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_class',
            field=models.ForeignKey(blank=True, help_text='Выберите тип продукта', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products', to='catalogue.productclass'),
        ),
        migrations.CreateModel(
            name='InvoiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_price', models.IntegerField()),
                ('discount', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogue.discount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='catalogue.product')),
            ],
        ),
        migrations.CreateModel(
            name='Catalogue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(blank=True)),
                ('structure', models.CharField(choices=[('standalone', 'Самостоятельная'), ('parent', 'Родительская'), ('child', 'Дочерняя')], default='standalone', max_length=10, verbose_name='Структура каталога')),
                ('category', models.ManyToManyField(through='catalogue.CatalogCategory', to='catalogue.Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogue.catalogue')),
            ],
        ),
        migrations.AddField(
            model_name='catalogcategory',
            name='catalogue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.catalogue'),
        ),
        migrations.AddField(
            model_name='catalogcategory',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.category'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='categories',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_attributes', to='catalogue.category'),
        ),
    ]
